name: Docs to PDF
# This workflow is triggered on pushes to the repository.
on:
  workflow_dispatch:
  push:
    branches:
      - main
    # Paths can be used to only trigger actions when you have edited certain files, such as a file within the /docs directory
    paths:
      - 'docs/**.md'
      - 'docs/images/**'
      - '.github/workflows/*yml'
jobs:
  converttopdf:
    name: Identify new markdown files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - run: chmod +x ./scripts/filter_mds_new_only.sh
      - run: ./scripts/filter_mds_new_only.sh
      - run: |
          if [[ -z "$(ls tmp_mds_to_convert/*md)" ]]; then
            echo "::set-output name=new_mds::false"
          else
            echo "::set-output name=new_mds::true"
          fi
      - uses: baileyjm02/markdown-to-pdf@v1
        with:
          input_dir: tmp_mds_to_convert
          output_dir: new_pdfs
          # images_dir: docs/images
          # for example <img src="./images/file-name.png">
          # image_import: ./images
          # Default is true, can set to false to only get PDF files
          build_html: false

  uploadtoslack:
    name: Upload to Slack
    runs-on: ubuntu-latest
    needs: [converttopdf]
    steps:
      - uses: actions/upload-artifact@v1
        if: steps.converttopdf.outputs.new_mds == 1
        with:
          name: new_pdfs
          path: new_pdfs
      - run: |
          if [[ -z "$(ls new_pdfs/*pdf)" ]]; then
            echo "No new PDFS, nothing to upload"
          else
            for new_pdf in `ls new_pdfs/*pdf`; do
              curl -F file=${new_pdf} \
              -F channels=#meeting-minutes-pdfs \
              -H "Authorization: Bearer ${{ secrets.SLACK_SECRET }}" \
              https://slack.com/api/files.upload;
            done
          fi

  uploadtogithub:
    name: Upload to GitHub
    runs-on: ubuntu-latest
    needs: [converttopdf, uploadtoslack]
    steps:
      - run: |
          if [[ -z "$(ls new_pdfs/*pdf)" ]]; then
            echo "No new PDFS, nothing to upload"
          else
            cp new_pdfs/*pdf pdfs/
            rm -rf tmp_mds_to_convert
            rm -rf new_pdfs
          fi
      - uses: mikeal/publish-to-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: 'main'
