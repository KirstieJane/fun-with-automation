name: Docs to PDF
# This workflow is triggered on pushes to the repository.
on:
  workflow_dispatch:
  push:
    branches:
      - main
    # Paths can be used to only trigger actions when you have edited certain files, such as a file within the /docs directory
    paths:
      - 'docs/**.md'
      - 'docs/images/**'
      - '.github/workflows/*yml'
jobs:
  converttopdf:
    name: Updated MDs to PDF
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Find updated markdown files
        id: filter
        run: |
          chmod +x ./scripts/filter_mds_new_only.sh
          ./scripts/filter_mds_new_only.sh
          if [[ -z "$(ls -A tmp_mds_to_convert/*)" ]]; then
            echo "::set-output name=new_mds::0"
            echo "Setting output to 0"
          else
            echo "::set-output name=new_mds::1"
            echo "Setting output to 1"
          fi
      - name: Convert to pdf
        uses: baileyjm02/markdown-to-pdf@v1
        if: steps.findnewmdfiles.outputs.new_mds == 1
        with:
          input_dir: tmp_mds_to_convert
          output_dir: new_pdfs
          # images_dir: docs/images
          # for example <img src="./images/file-name.png">
          # image_import: ./images
          # Default is true, can set to false to only get PDF files
          build_html: false
          #- name: Checkout main repository
          #  uses: actions/upload-artifact@v1
          #  if: steps.converttopdf.outputs.new_mds == 1
          #  with:
          #    name: new_pdfs
          #    path: new_pdfs
      - name: Push new pdfs to slack
        if: steps.filter.outputs.new_mds == 1
        run: |
          for new_pdf in `ls new_pdfs/*pdf`; do
            curl -F file=${new_pdf} \
            -F channels=#meeting-minutes-pdfs \
            -H "Authorization: Bearer ${{ secrets.SLACK_SECRET }}" \
            https://slack.com/api/files.upload;
          done
      - name: Move new pdfs to pdfs dir and clean up tmp dirs
        if: steps.filter.outputs.new_mds == 1
        run: |
          if [[ -z "$(ls -A new_pdfs/*pdf)" ]]; then
            echo "No new PDFS, nothing to upload"
          else
            cp new_pdfs/*pdf pdfs/
            rm -rf tmp_mds_to_convert
            rm -rf new_pdfs
          fi
      - name: Push to GitHub
        uses: mikeal/publish-to-github-action@master
        if: steps.filter.outputs.new_mds == 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: 'main'
